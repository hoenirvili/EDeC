--TRIGGERS--
-- CATEGORIE CARACTERISTI--
DECLARE
 last_index NUMBER;
BEGIN
  SELECT MAX(ID)+ 1 INTO last_index FROM CATEGORIE_CARACTERISTICI;
  IF last_index > 0 THEN
    BEGIN
      EXECUTE IMMEDIATE 'DROP SEQUENCE CATEG_CARACT_SEQ';
      EXCEPTION WHEN OTHERS THEN
        NULL;
    END;
  EXECUTE IMMEDIATE 'CREATE SEQUENCE CATEG_CARACT_SEQ INCREMENT BY 1 START WITH ' || last_index || ' CACHE 50 NOMAXVALUE NOCYCLE';
  END IF;
END;
/

CREATE OR REPLACE TRIGGER AI_CATEG_CARACT
BEFORE INSERT ON CATEGORIE_CARACTERISTICI
FOR EACH ROW

BEGIN 
    IF :new.id IS NULL THEN --in case we have an id when we insert (eg when importing from csv) we do not use the trigger
    Select  CATEG_CARACT_SEQ.NEXTVAL
    INTO    :new.id
    FROM    dual;
    END IF;
END;
/

--USERS--

DECLARE
 last_index NUMBER;
BEGIN
  SELECT MAX(ID)+ 1 INTO last_index FROM USERS;
  IF last_index > 0 THEN
    BEGIN
      EXECUTE IMMEDIATE 'DROP SEQUENCE USERS_SEQ';
      EXCEPTION WHEN OTHERS THEN
        NULL;
    END;
  EXECUTE IMMEDIATE 'CREATE SEQUENCE USERS_SEQ INCREMENT BY 1 START WITH ' || last_index || ' CACHE 50 NOMAXVALUE NOCYCLE';
  END IF;
END;
/

CREATE OR REPLACE TRIGGER AI_USERS
BEFORE INSERT ON USERS
FOR EACH ROW

BEGIN 
    IF :new.id IS NULL THEN --in case we have an id when we insert (eg when importing from csv) we do not use the trigger
    Select  USERS_SEQ.NEXTVAL
    INTO    :new.id
    FROM    dual;
    END IF;
END;
/

--MEDIA--
DECLARE
 last_index NUMBER;
BEGIN
  SELECT MAX(ID)+ 1 INTO last_index FROM MEDIA;
  IF last_index > 0 THEN
    BEGIN
      EXECUTE IMMEDIATE 'DROP SEQUENCE MEDIA_SEQ';
      EXCEPTION WHEN OTHERS THEN
        NULL;
    END;
  EXECUTE IMMEDIATE 'CREATE SEQUENCE MEDIA_SEQ INCREMENT BY 1 START WITH ' || last_index || ' CACHE 50 NOMAXVALUE NOCYCLE';
  END IF;
END;
/

CREATE OR REPLACE TRIGGER AI_MEDIA
BEFORE INSERT ON MEDIA
FOR EACH ROW

BEGIN 
    IF :new.id IS NULL THEN --in case we have an id when we insert (eg when importing from csv) we do not use the trigger
    Select  MEDIA_SEQ.NEXTVAL
    INTO    :new.id
    FROM    dual;
    END IF;
END;
/

--USERS HATES--
DECLARE
 last_index NUMBER;
BEGIN
  SELECT MAX(ID)+ 1 INTO last_index FROM USER_HATES;
  IF last_index > 0 THEN
    BEGIN
      EXECUTE IMMEDIATE 'DROP SEQUENCE USER_HATES_SEQ';
      EXCEPTION WHEN OTHERS THEN
        NULL;
    END;
  EXECUTE IMMEDIATE 'CREATE SEQUENCE USER_HATES_SEQ INCREMENT BY 1 START WITH ' || last_index || ' CACHE 50 NOMAXVALUE NOCYCLE';
  END IF;
END;
/

CREATE OR REPLACE TRIGGER AI_USER_HATES
BEFORE INSERT ON USER_HATES
FOR EACH ROW

BEGIN 
    IF :new.id IS NULL THEN --in case we have an id when we insert (eg when importing from csv) we do not use the trigger
    Select  USER_HATES_SEQ.NEXTVAL
    INTO    :new.id
    FROM    dual;
    END IF;
END;
/
--USER LOVES--
DECLARE
 last_index NUMBER;
BEGIN
  SELECT MAX(ID)+ 1 INTO last_index FROM USER_LOVES;
  IF last_index > 0 THEN
    BEGIN
      EXECUTE IMMEDIATE 'DROP SEQUENCE USER_LOVES_SEQ';
      EXCEPTION WHEN OTHERS THEN
        NULL;
    END;
  EXECUTE IMMEDIATE 'CREATE SEQUENCE USER_LOVES_SEQ INCREMENT BY 1 START WITH ' || last_index || ' CACHE 50 NOMAXVALUE NOCYCLE';
  END IF;
END;
/

CREATE OR REPLACE TRIGGER AI_USER_LOVES
BEFORE INSERT ON USER_LOVES
FOR EACH ROW

BEGIN 
    IF :new.id IS NULL THEN --in case we have an id when we insert (eg when importing from csv) we do not use the trigger
    Select  USER_LOVES_SEQ.NEXTVAL
    INTO    :new.id
    FROM    dual;
    END IF;
END;
/
--PRODUS--
DECLARE
 last_index NUMBER;
BEGIN
  SELECT MAX(ID)+ 1 INTO last_index FROM PRODUS;
  IF last_index > 0 THEN
    BEGIN
      EXECUTE IMMEDIATE 'DROP SEQUENCE PRODUS_SEQ';
      EXCEPTION WHEN OTHERS THEN
        NULL;
    END;
  EXECUTE IMMEDIATE 'CREATE SEQUENCE PRODUS_SEQ INCREMENT BY 1 START WITH ' || last_index || ' CACHE 50 NOMAXVALUE NOCYCLE';
  END IF;
END;
/

CREATE OR REPLACE TRIGGER AI_PRODUS
BEFORE INSERT ON PRODUS
FOR EACH ROW
BEGIN
    IF :new.id IS NULL THEN --in case we have an id when we insert (eg when importing from csv) we do not use the trigger
      Select  PRODUS_SEQ.NEXTVAL
      INTO    :new.id
      FROM    dual;
   END IF;
END;
/
--CARACTERISTICA--
DECLARE
 last_index NUMBER;
BEGIN
  SELECT MAX(ID)+ 1 INTO last_index FROM CARACTERISTICA;
  IF last_index > 0 THEN
    BEGIN
      EXECUTE IMMEDIATE 'DROP SEQUENCE CARACTERISTICA_SEQ';
      EXCEPTION WHEN OTHERS THEN
        NULL;
    END;
  EXECUTE IMMEDIATE 'CREATE SEQUENCE CARACTERISTICA_SEQ INCREMENT BY 1 START WITH ' || last_index || ' CACHE 50 NOMAXVALUE NOCYCLE';
  END IF;
END;
/

CREATE OR REPLACE TRIGGER AI_CARACTERISTICA
BEFORE INSERT ON CARACTERISTICA
FOR EACH ROW

BEGIN 
    IF :new.id IS NULL THEN --in case we have an id when we insert (eg when importing from csv) we do not use the trigger
    Select  CARACTERISTICA_SEQ.NEXTVAL
    INTO    :new.id
    FROM    dual;
    END IF;
END;
/
--CARACTERISTICI PRODUSE--
DECLARE
 last_index NUMBER;
BEGIN
  SELECT MAX(ID)+ 1 INTO last_index FROM CARACTERISTICI_PRODUSE;
  IF last_index > 0 THEN
    BEGIN
      EXECUTE IMMEDIATE 'DROP SEQUENCE CARACT_PROD_SEQ';
      EXCEPTION WHEN OTHERS THEN
        NULL;
    END;
  EXECUTE IMMEDIATE 'CREATE SEQUENCE CARACT_PROD_SEQ INCREMENT BY 1 START WITH ' || last_index || ' CACHE 50 NOMAXVALUE NOCYCLE';
  END IF;
END;
/

CREATE OR REPLACE TRIGGER AI_CARACT_PROD
BEFORE INSERT ON CARACTERISTICI_PRODUSE
FOR EACH ROW

BEGIN 
    IF :new.id IS NULL THEN --in case we have an id when we insert (eg when importing from csv) we do not use the trigger
    Select  CARACT_PROD_SEQ.NEXTVAL 
    INTO    :new.id
    FROM    dual;
    END IF;
END;
/

